#!/bin/bash

# Test script for the distributed key-value store

echo "=== Distributed KV Store Test ==="

# Clean up any existing processes
pkill -f "kvstore"
sleep 2

# Generate protobuf files
echo "Generating protobuf files..."
protoc --go_out=. --go-grpc_out=. proto/kvstore.proto

# Build the application
echo "Building application..."
go build -o kvstore main.go

# Start 3 worker nodes in background
echo "Starting worker nodes..."
./kvstore server node1 localhost:8001 &
NODE1_PID=$!
sleep 1

./kvstore server node2 localhost:8002 &
NODE2_PID=$!
sleep 1

./kvstore server node3 localhost:8003 &
NODE3_PID=$!
sleep 2

echo "Workers started with PIDs: $NODE1_PID, $NODE2_PID, $NODE3_PID"

# Test basic operations
echo -e "\n=== Testing Basic Operations ==="

echo "Testing PUT operations..."
./kvstore client put user:123 "john_doe"
./kvstore client put user:456 "jane_doe"
./kvstore client put product:abc "laptop"
./kvstore client put product:def "mouse"

echo -e "\nTesting GET operations..."
./kvstore client get user:123
./kvstore client get user:456
./kvstore client get product:abc
./kvstore client get product:def
./kvstore client get nonexistent:key

# Test fault tolerance
echo -e "\n=== Testing Fault Tolerance ==="
echo "Killing node2 (PID: $NODE2_PID)..."
kill $NODE2_PID
sleep 2

echo "Testing operations after node failure..."
./kvstore client get user:123
./kvstore client put user:789 "new_user"
./kvstore client get user:789

# Test adding a new node
echo -e "\n=== Testing Node Recovery ==="
echo "Starting a replacement node..."
./kvstore server node4 localhost:8004 &
NODE4_PID=$!
sleep 2

echo "Testing operations with new node..."
./kvstore client put user:999 "another_user"
./kvstore client get user:999

# Cleanup
echo -e "\n=== Cleaning Up ==="
echo "Stopping all nodes..."
kill $NODE1_PID $NODE3_PID $NODE4_PID 2>/dev/null
sleep 2

echo "Test completed!"